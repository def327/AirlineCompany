
package by.zyablov.airlinecompany.beans.builders;

import by.zyablov.airlinecompany.beans.aircrafts.*;
import by.zyablov.airlinecompany.beans.techdata.*;
import by.zyablov.airlinecompany.interfaces.AircraftBuilderBehavior;
import by.zyablov.airlinecompany.interfaces.UniqueAircraftTechDataBehavior;

/**
 * Class {@code BuilderAircraft} creates {@code Aircraft} object and initializes
 * it's fields.
 * 
 * @see by.zyablov.airlinecompany.beans.aircrafts.Aircraft
 *
 */
public abstract class BuilderAircraft implements AircraftBuilderBehavior {

	/**
	 * A value of {@code Aircraft} object to create and initialize
	 */
	protected Aircraft aircraft;

	/**
	 * Set's an unque ID for {@code Aircraft} object
	 * 
	 * @param idAircraft
	 *            - a value is a unique ID, generated by
	 *            {@code IdAircraftMakeManager}.
	 * 
	 * 
	 * @see by.zyablov.airlinecompany.tools.IdAircraftMakeManager
	 * 
	 */
	public void setId(final int idAircraft) {
		this.aircraft.setIdAircraft(idAircraft);
	}

	/**
	 * Set's a name for {@code Aircraft} object.
	 * 
	 * @param nameAircraft
	 *            - this value is a name of {@code Aircraft} object.
	 */
	public void setName(final String nameAircraft) {
		this.aircraft.setNameAircraft(nameAircraft);
	}

	/**
	 * Set's a basic basic techinal characteristic for {@code Aircraft} object.
	 * 
	 * @param basicTechAircraftData
	 *            - this value represents a basic techinal characteristic
	 * 
	 */
	public void setBasicTechSpecificationAircraft(final BasicTechAircraftData basicTechAircraftData) {
		this.aircraft.setBasicTechAircraftData(basicTechAircraftData);
	}

	/**
	 * Set's a unique techinal characteristic for {@code Aircraft} object
	 * 
	 * @param uniqueAircraftTechDataBehavior
	 *            - an unique technical characteristic
	 */
	public abstract void setUniqueAircraftTechData(final UniqueAircraftTechDataBehavior uniqueAircraftTechDataBehavior);

	/**
	 * Return's a initialized {@code Aircraft} object
	 */
	public abstract Aircraft getResult();

}
